import { MainElement } from "./ui/MainElement";
import { LibraryManager } from "./LibraryManager";
import { StormLibrary } from "@stormstreaming/stormlibrary";
import { StormGUIConfigImpl } from "./StormGUIConfigImpl";
import { StormPlayerConfig } from "./types/StormPlayerConfig";
import { StormStreamConfig } from "@stormstreaming/stormlibrary";
import { EventDispatcher } from "./events/EventDispatcher";
export declare class StormPlayer extends EventDispatcher {
    private static VERSION;
    private static NEXT_PLAYER_ID;
    private readonly id;
    private readonly instanceName;
    private playerConfig;
    private mainElement;
    private libraryManager;
    private origGUIConfig;
    private origLibraryConfig;
    private started;
    waitingRoom: boolean;
    constructor(playerConfig: StormPlayerConfig, streamConfig: StormStreamConfig, wait?: boolean);
    initialize(): void;
    waitingRoomResize: () => void;
    setLibraryManager(): void;
    addCuePoint(label: string, time: number): void;
    removeCuePoint(time: number): void;
    getLibrary(): StormLibrary;
    getInstanceID(): number;
    setStreamConfig(streamConfig: StormStreamConfig): void;
    setPlayerConfig(playerConfig: StormPlayerConfig): void;
    getInstanceName(): string;
    getMainElement(): MainElement;
    setMainElement(element: MainElement): void;
    setSize(width: number | string, height: number | string): void;
    setWidth(width: number | string): void;
    setHeight(height: number | string): void;
    setStyle(config: any): void;
    getWidth(): number;
    getHeight(): number;
    setTitle(title: string): void;
    setSubtitle(subtitle: string): void;
    getPlayerConfig(): StormGUIConfigImpl;
    getOrigLibraryConfig(): StormStreamConfig;
    getOrigGUIConfig(): StormPlayerConfig;
    getLibraryManager(): LibraryManager;
    isTouchDevice(): boolean;
    getVersion(): string;
    destroy(): void;
}
