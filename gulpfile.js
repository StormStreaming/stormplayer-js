let gulp = require("gulp");
let ts = require("gulp-typescript");
let sourcemaps = require('gulp-sourcemaps');
let replace = require('gulp-replace');
let clean = require('gulp-clean');
let watch = require("gulp-watch");

/**
 * Turn TypeScript code into JavaScript files
 */
gulp.task('typescript', function(){
    const tsProject = ts.createProject('tsconfig.json');
    return tsProject.src()
        .pipe(sourcemaps.init())
        .pipe(tsProject())
        .pipe(sourcemaps.write('./'))
        .pipe(gulp.dest('./build/scripts/'));
});

/**
 * Attaches reference of StormPlayerGUI into window object
 */
gulp.task('addrequire', function(){
    return gulp.src(['./build/scripts/storm-gui.js'])
        .pipe(replace('exports.StormPlayerGUI = StormPlayerGUI;', 'exports.StormPlayerGUI = StormPlayerGUI;window.StormPlayerGUI = StormPlayerGUI;'))
        .pipe(gulp.dest('./dist/scripts'));
});

/**
 * Copies sourcemaps generated by the TypeScript
 */
gulp.task('ts-sourcemaps', function(){
    return gulp.src(['./build/scripts/storm-gui.js.map'])
        .pipe(gulp.dest('./dist/scripts'));
});

/**
 * Copies all html files into dist folder
 */
gulp.task('html', function(){
    return gulp.src(['./src/html/**/*.html'])
        .pipe(gulp.dest('./dist'));
});

/**
 * Cleans both build and dist folders (usefull if you mess up your code)
 */
gulp.task('clear', function(){
    return gulp.src(['./dist/**/*.*','./dist/*/*.js','./build/*'])
        .pipe(clean());
});

/**
 * Watches for any changes in /src/typescript and automatically compiles code into js
 */
gulp.task("watch:ts", function () {
    return watch("./src/typescript/**/*.ts", gulp.series("typescript", "addrequire", "ts-sourcemaps"));
});

/**
 * Watches for any changes in /src/typescript and automatically compiles code into js
 */
gulp.task("watch:html", function () {
    return watch("./src/html/**/*.ts", gulp.series("html"));
});