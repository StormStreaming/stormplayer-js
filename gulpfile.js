let gulp = require("gulp");
let ts = require("gulp-typescript");
let sourcemaps = require('gulp-sourcemaps');
let replace = require('gulp-replace');
let clean = require('gulp-clean');
let watch = require("gulp-watch");
let browserSync = require('browser-sync');
let reload = browserSync.reload;
let sass = require("gulp-sass");
let rename = require("gulp-rename");

/**
 * Parses CSS files
 */

gulp.task("styles", function () {
    return gulp
        .src("./src/styles/**/*.scss")
        .pipe(sass({ outputStyle: "compressed" }).on("error", sass.logError))
        .pipe(rename({ suffix: ".min" }))
        .pipe(gulp.dest("./dist/styles"));
});

/**
 * Turn TypeScript code into JavaScript files
 */
gulp.task('typescript', function(){
    const tsProject = ts.createProject('tsconfig.json');
    return tsProject.src()
        .pipe(sourcemaps.init())
        .pipe(tsProject())
        .pipe(sourcemaps.write('./'))
        .pipe(gulp.dest('./build/scripts/'));
});

/**
 * Attaches reference of StormPlayer into window object
 */
gulp.task('addrequire', function(){
    return gulp.src(['./build/scripts/storm-player.js'])
        .pipe(replace('exports.StormPlayer = StormPlayer;', 'exports.StormPlayer = StormPlayer;window.StormPlayer = StormPlayer;'))
        .pipe(gulp.dest('./dist/scripts'));
});

/**
 * Copies sourcemaps generated by the TypeScript
 */
gulp.task('ts-sourcemaps', function(){
    return gulp.src(['./build/scripts/storm-player.js.map'])
        .pipe(gulp.dest('./dist/scripts'));
});

/**
 * Copies all html files into dist folder
 */
gulp.task('html', function(){
    return gulp.src(['./src/html/**/*.html'])
        .pipe(gulp.dest('./dist'));
});

/**
 * Cleans both build and dist folders (usefull if you mess up your code)
 */
gulp.task('clear', function(){
    return gulp.src(['./dist/**/*.*','./dist/*/*.js','./build/*'])
        .pipe(clean());
});


/**
 * Builds dist directory
 */
gulp.task("build", gulp.series("html", "styles", "typescript", "addrequire", "ts-sourcemaps"));


/**
 * Runs BrowserSync, automatically compiles files and realoads browser after any change
 */
gulp.task("watch", function(){
    browserSync({
        notify: false,
        port: 9000,
        ui: false,
        server: {
            baseDir: 'dist',
        }
    });
    return watch(["./src/html/**/*.html", "./src/html/**/*.ts", "./src/typescript/**/*.ts", "./src/styles/**/*.scss"], gulp.series("html", "styles", "typescript", "addrequire", "ts-sourcemaps", reload));
});

/**
 * Builds dist directory & runs watches
 */
gulp.task("serve", gulp.series("build","watch"));